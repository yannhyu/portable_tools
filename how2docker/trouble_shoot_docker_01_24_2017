Still, setting everything up could be a PITA and you had to install Oracle VirtualBox to use it as Docker containers were actually run inside of a VM (which was the purpose of boot2docker). If you use Hyper-V regularly, you’ll notice that you can’t have it both ways. Scott Hanselman figured out a way to make switching between the two a little bit less painful, but you still had to reboot your machine if you wanted to use VirtualBox.

Time to fix that! You can now use Hyper-V to run the boot2docker VM and connect to Docker on Windows. I guess that this has been possible since boot2docker was released, but it wasn’t that straightforward to set up at the time. Enter Docker Machine.

TL;DR: Docker Machine is a cross platform utility to help you set up, manage and connect to Docker. It automagically (well, most of the time) picks the best way to set up Docker in your environment. That’s the boot2docker VM on Windows with either VirtualBox either Hyper-V, plain old Docker on Linux etc.

Docker still recommends using VirtualBox on Windows, but Docker Machine supports tons of other drivers: AWS, Digital Ocean, Google Compute, Azure, Rackspace, Hyper-V…

So how do you install Docker Machine on Windows with Hyper-V? Here we go.

Setting up Hyper-V and network connections

Make sure the Hyper-V role is installed on your computer and the Hyper-V Manager works fine. I still had to fix a small issue on Windows 10.

Next, create a Virtual Network Switch. Pick internal as type.

Then go to your Network Connections, open the properties of your active internet connection and share the connection with the newly created virtual network switch. This will make sure that the IP of the boot2docker VM never changes and it still has internet access.

Download and install Docker Machine

You don’t need Docker Toolbox if you’re not going to use Oracle VirtualBox. Just download the latest version of Docker Machine from GitHub, rename it to docker-machine.exe and put it in your PATH. That’s all there is to it.